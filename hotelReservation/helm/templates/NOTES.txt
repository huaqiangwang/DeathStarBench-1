1. Get the application URL by running these commands:
{{- if (include "hotelres.get" (list .Values "frontend" "service.type") | contains "NodePort") }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services frontend-{{ include "hotelres.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if (include "hotelres.get" (list .Values "frontend" "service.type") | contains "LoadBalancer") }} 
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w frontend-{{ include "hotelres.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} rontend-{{ include "hotelres.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if (include "hotelres.get" (list .Values "frontend" "service.type") | contains "ClusterIP") }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "hotelres.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app-name=frontend" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
  echo "Visit http://127.0.0.1:8080 to use your application"
{{- end }}

{{- if (include "hotelres.get" (list .Values "frontend" "service.type") | contains "ClusterIP") }}
2. Or you may use incluster wrk client to generate traffic for performance test, for example:
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "hotelres.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app-name=wrk-client" -o jsonpath="{.items[0].metadata.name}")
  kubectl -n {{ .Release.Namespace }} exec ${POD_NAME} -- wrk -D exp -t 2  -c 50  -L -s hotelReservation/wrk2_lua_scripts/mixed-workload_type_1.lua -d 30 -R 1000 http://frontend-{{ include "hotelres.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.serviceDnsDomain }}:5000
{{- end }}
