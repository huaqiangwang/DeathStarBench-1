apiVersion: v1
data:
  config.json: |
    {
      "consulAddress": "consul.hotel-res.svc.cluster.local:8500",
      "jaegerAddress": "jaeger.hotel-res.svc.cluster.local:6831",
      "FrontendPort": "5000",
      "GeoPort": "8083",
      "GeoMongoAddress": "mongodb-geo.hotel-res.svc.cluster.local:27018",
      "ProfilePort": "8081",
      "ProfileMongoAddress": "mongodb-profile.hotel-res.svc.cluster.local:27019",
      "ProfileMemcAddress": "memcached-profile.hotel-res.svc.cluster.local:11213",
      "RatePort": "8084",
      "RateMongoAddress": "mongodb-rate.hotel-res.svc.cluster.local:27020",
      "RateMemcAddress": "memcached-rate.hotel-res.svc.cluster.local:11212",
      "RecommendPort": "8085",
      "RecommendMongoAddress": "mongodb-recommendation.hotel-res.svc.cluster.local:27021",
      "ReservePort": "8087",
      "ReserveMongoAddress": "mongodb-reservation.hotel-res.svc.cluster.local:27022",
      "ReserveMemcAddress": "memcached-reserve.hotel-res.svc.cluster.local:11214",
      "SearchPort": "8082",
      "UserPort": "8086",
      "UserMongoAddress": "mongodb-user.hotel-res.svc.cluster.local:27023"
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: configmap-config-json
  namespace: hotel-res
{{- $frontendCount := .Values.frontend.count | int | default 1 -}}
{{- $replicaCount := .Values.replicaCount.frontend | default 1 -}}
{{range $i,$e := until $frontendCount}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    death-star-project: hotel-res
    app-name: frontend{{$i}}
  namespace: hotel-res
  name: frontend{{$i}}
spec:
  replicas: {{$replicaCount}}
  selector:
    matchLabels:
      death-star-project: hotel-res
      app-name: frontend{{$i}}
  strategy: {}
  template:
    metadata:
      name: frontend{{$i}}
      labels:
        death-star-project: hotel-res
        app-name: frontend{{$i}}
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - command:
        - frontend
        env:
        - name: DLOG
          value: DEBUG
        image: hotel_reserv_frontend_single_node
        name: hotel-reserv-frontend
        ports:
        - containerPort: 5000
        resources: {}
        volumeMounts:
        - mountPath: /go/src/github.com/harlow/go-micro-services/config.json
          subPath: config.json
          name: config-json
        imagePullPolicy: IfNotPresent
      restartPolicy: Always
      volumes:
      - name: config-json
        configMap:
          name: configmap-config-json
          items:
          - key: config.json
            path: config.json
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    death-star-project: hotel-res
    app-name: frontend{{$i}}
  namespace: hotel-res
  name: frontend{{$i}}
spec:
  ports:
  - name: "5000"
    port: 5000
    targetPort: 5000
  selector:
    death-star-project: hotel-res
    app-name: frontend{{$i}}
status:
  loadBalancer: {}
{{end}}
